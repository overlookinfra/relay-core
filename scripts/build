#!/usr/bin/env bash
set -euo pipefail

# this ensures that we are in the correct directory context
cd "$(dirname "$0")"/..

RELAY_CORE_REPO_BASE="${RELAY_CORE_REPO_BASE:-us-docker.pkg.dev/puppet-relay-contrib-oss/relay-core}"
export KO_DOCKER_REPO="${RELAY_CORE_REPO_BASE}"

KO_BUILD_TARGETS=(
  ./cmd/relay-installer
  ./cmd/relay-metadata-api
  ./cmd/relay-metrics
  ./cmd/relay-operator
  ./cmd/relay-runtime-tools
  ./cmd/relay-operator-vault-init
  ./cmd/relay-operator-webhook-certificate-controller
)

# Build ko targets.
{
  # It's not possible to have ko both name the image how we want (i.e., with the
  # repo name intact) and also only store the image in the local Docker daemon
  # without pushing it, so this hack saves the images to a pipe and immediately
  # passes them to `docker load`... without disturbing stdin/stdout of ko
  # itself.
  go run \
    github.com/google/ko build \
    --base-import-paths \
    --push=false \
    --tarball=/dev/fd/3 \
    --tags "${VERSION}" \
    "${KO_BUILD_TARGETS[@]}" \
    3>&1 >&4 4>&- | docker load 4>&-
} 4>&1
