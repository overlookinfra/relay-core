// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/google/wire"
	"github.com/puppetlabs/leg/vaultutil/pkg/vault"
	"github.com/puppetlabs/relay-core/pkg/install/op/kube"
	vault3 "github.com/puppetlabs/relay-core/pkg/install/op/vault"
	vault2 "github.com/puppetlabs/relay-core/pkg/install/vault"
)

import (
	_ "k8s.io/client-go/plugin/pkg/client/auth"
)

// Injectors from wire.go:

func NewVaultInitializer(ctx context.Context, config *vault.VaultConfig, coreConfig *vault2.VaultCoreConfig) (*vault2.VaultInitializer, error) {
	config2 := vaultConfig(config)
	client, err := vault3.NewClient(ctx, config2)
	if err != nil {
		return nil, err
	}
	scheme := kube.NewKubeScheme()
	clientClient, err := kube.NewKubeClient(scheme)
	if err != nil {
		return nil, err
	}
	vaultSystemManager := vault.NewVaultSystemManager(client, clientClient, config)
	vaultInitializer := vault2.NewVaultInitializer(vaultSystemManager, config, coreConfig)
	return vaultInitializer, nil
}

// wire.go:

var VaultSystemManagerProviderSet = wire.NewSet(vault.NewVaultSystemManager)

func vaultConfig(vaultConfig2 *vault.VaultConfig) vault3.Config {
	return vault3.Config{
		Addr: vaultConfig2.VaultAddr.String(),
	}
}
